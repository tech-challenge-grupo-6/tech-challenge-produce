name: Build and Push Docker Image AWS

on:
  workflow_dispatch:

jobs:
  tests:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "20"

      - name: Install dependencies
        run: npm install

      - name: Unit Tests
        run: npm run test

  build-push:
    runs-on: ubuntu-latest
    needs: tests

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: "Configure AWS Credentials"
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Get ECR Urls
        run: |
          controladorpedidos_app_ecr=$(aws ecr describe-repositories --repository-names controladorproducao-app --region us-east-1 | jq -r '.repositories[0].repositoryUri')
          echo "CONTROLADORPEDIDOS_APP_ECR=$controladorpedidos_app_ecr" >> $GITHUB_ENV

      - name: Docker Login to ECR
        run: |
          aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin ${{ env.CONTROLADORPEDIDOS_APP_ECR }}

      - name: Docker Build Controlador Pedidos
        run: |
          docker build . -t ${{ env.CONTROLADORPEDIDOS_APP_ECR }}:latest

      - name: Docker Push
        run: |
          docker push ${{ env.CONTROLADORPEDIDOS_APP_ECR }}:latest

  eks-deploy:
    runs-on: ubuntu-latest
    needs: build-push
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: "Configure AWS Credentials"
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Get ECR Urls
        run: |
          controladorpedidos_app_ecr=$(aws ecr describe-repositories --repository-names controladorproducao-app --region us-east-1 | jq -r '.repositories[0].repositoryUri')
          echo "CONTROLADORPEDIDOS_APP_ECR=$controladorpedidos_app_ecr" >> $GITHUB_ENV

      - name: Set Images Names
        run: |
          echo "CONTROLADOR_PEDIDO_IMAGE_NAME=${{ env.CONTROLADORPEDIDOS_APP_ECR }}:latest" >> $GITHUB_ENV

      - name: Update kubeconfig
        run: |
          aws eks update-kubeconfig --region us-east-1 --name tech-challenge-eks

      - name: Replace tokens in Kubernetes files
        uses: cschleiden/replace-tokens@v1
        with:
          files: "./kubernetes-aws/*.yml"
          tokenPrefix: "__"
          tokenSuffix: "__"

      - name: Show files
        run: |
          cat ./kubernetes-aws/*.yml

      - name: Kubernetes Apply
        run: |
          kubectl apply -f ./kubernetes-aws/
